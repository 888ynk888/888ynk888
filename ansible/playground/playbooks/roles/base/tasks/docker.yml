---
- name: Install docker for RH family
  block:
    - name: Install yum-utils
      yum:
        state: present
        name:
          - yum-utils

    - name: Add docker repo
      command: >-
        yum-config-manager
        --add-repo
        https://download.docker.com/linux/centos/docker-ce.repo
      args:
        creates: "/etc/yum.repos.d/docker-ce.repo"

    - name: Install docker-ce
      yum:
        state: present
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - python-docker
  when: ansible_facts['os_family'] == "RedHat"

- name: Install docker for Debian family
  block:
    - name: Install dependencies
      apt:
        state: present
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
    - name: Remove docker.list
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/docker.list
        state: absent

    - name: Remove file docker-archive-keyring.gpg
      ansible.builtin.file:
        path: /usr/share/keyrings/docker-archive-keyring.gpg
        state: absent

    - name: Remove file (delete file)
      ansible.builtin.file:
        path: /var/lib/apt/lists/lock
        state: absent

    - name: Update all packages to their latest version
      ansible.builtin.apt:
        name: "*"
        update_cache: yes
        state: present

    - name: Pull gpg key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add repo
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_facts['distribution_release'] }} stable"
        state: present

    - name: Install docker-ce
      apt:
        state: present
        name:
          - docker-compose-plugin
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - python3-docker
        update_cache: yes
  when: ansible_facts['os_family'] == "Debian"

- name: Start docker service
  service:
    name: docker
    enabled: yes
    state: started

- name: Pre-pull required images
  docker_image:
    source: pull
    name: "{{ item }}"
  loop: "{{ docker_pull_images }}"
